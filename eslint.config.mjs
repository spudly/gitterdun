import {dirname} from 'path';
import {fileURLToPath} from 'url';
import importPlugin from 'eslint-plugin-import';
import reactPlugin from 'eslint-plugin-react';
import jsxA11yPlugin from 'eslint-plugin-jsx-a11y';
import typescriptEslint from '@typescript-eslint/eslint-plugin';
import typescriptEslintParser from '@typescript-eslint/parser';
import * as reactHooks from 'eslint-plugin-react-hooks';

// TODO: get rid of these

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const eslintConfig = [
  {
    plugins: {
      '@typescript-eslint': typescriptEslint,
      import: importPlugin,
      react: reactPlugin,
      'jsx-a11y': jsxA11yPlugin,
      'react-hooks': reactHooks,
    },
    files: ['**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx'],
    languageOptions: {
      parser: typescriptEslintParser,
      parserOptions: {
        project: ['./tsconfig.base.json'],
        tsconfigRootDir: __dirname,
        warnOnUnsupportedTypeScriptVersion: false,
      },
    },
    settings: {
      react: {version: 'detect', pragma: 'React'},
      'import/resolver': {
        typescript: {project: ['./tsconfig.base.json']},
        node: {extensions: ['.mjs', '.js', '.jsx', '.ts', '.tsx', '.d.ts']},
      },
      'import/parsers': {'@typescript-eslint/parser': ['.ts', '.tsx', '.d.ts']},
      'import/extensions': [
        '.mjs',
        '.js',
        '.jsx',
        '.json',
        '.ts',
        '.tsx',
        '.d.ts',
      ],
      'import/external-module-folders': ['node_modules', 'node_modules/@types'],
      propWrapperFunctions: ['forbidExtraProps', 'exact', 'Object.freeze'],
    },
    rules: {
      'jsx-a11y/accessible-emoji': 'off',
      'jsx-a11y/alt-text': [
        'error',
        {
          elements: ['img', 'object', 'area', 'input[type="image"]'],
          img: [],
          object: [],
          area: [],
          'input[type="image"]': [],
        },
      ],
      'jsx-a11y/anchor-has-content': ['error', {components: []}],
      'jsx-a11y/anchor-is-valid': [
        'error',
        {
          components: ['Link'],
          specialLink: ['to'],
          aspects: ['noHref', 'invalidHref', 'preferButton'],
        },
      ],
      'jsx-a11y/aria-activedescendant-has-tabindex': 'error',
      'jsx-a11y/aria-props': 'error',
      'jsx-a11y/aria-proptypes': 'error',
      'jsx-a11y/aria-role': ['error', {ignoreNonDOM: false}],
      'jsx-a11y/aria-unsupported-elements': 'error',
      'arrow-body-style': 'off',
      'arrow-parens': 'off',
      'jsx-a11y/autocomplete-valid': ['off', {inputComponents: []}],
      '@typescript-eslint/brace-style': 'off',
      'brace-style': 'off',
      camelcase: 'off',
      'jsx-a11y/click-events-have-key-events': 'error',
      '@typescript-eslint/comma-dangle': 'off',
      'comma-dangle': 'off',
      '@typescript-eslint/comma-spacing': 'off',
      'comma-spacing': 'off',
      'constructor-super': 'off',
      'jsx-a11y/control-has-associated-label': [
        'error',
        {
          labelAttributes: ['label'],
          controlComponents: [],
          ignoreElements: [
            'audio',
            'canvas',
            'embed',
            'input',
            'textarea',
            'tr',
            'video',
          ],
          ignoreRoles: [
            'grid',
            'listbox',
            'menu',
            'menubar',
            'radiogroup',
            'row',
            'tablist',
            'toolbar',
            'tree',
            'treegrid',
          ],
          depth: 5,
        },
      ],
      curly: ['off'],
      'import/default': 'off',
      '@typescript-eslint/default-param-last': 'error',
      'default-param-last': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/dot-notation': ['error', {allowKeywords: true}],
      'dot-notation': 'off', //  use @typescript-eslint version instead
      'import/dynamic-import-chunkname': [
        'off',
        {importFunctions: [], webpackChunknameFormat: '[0-9a-zA-Z-_/.]+'},
      ],
      'react-hooks/exhaustive-deps': 'warn',
      'import/export': 'error',
      'import/exports-last': 'off',
      'import/extensions': [
        'error',
        'ignorePackages',
        {js: 'never', mjs: 'never', jsx: 'never', ts: 'never', tsx: 'never'},
      ],
      'import/first': 'error',
      '@typescript-eslint/func-call-spacing': 'off',
      'func-call-spacing': 'off',
      'react/function-component-definition': [
        'error',
        {
          namedComponents: 'arrow-function',
          unnamedComponents: 'arrow-function',
        },
      ],
      'function-paren-newline': 'off',
      'getter-return': 'off',
      'import/group-exports': 'off',
      'jsx-a11y/heading-has-content': ['error', {components: ['']}],
      'jsx-a11y/html-has-lang': 'error',
      'jsx-a11y/iframe-has-title': 'error',
      'jsx-a11y/img-redundant-alt': 'error',
      'implicit-arrow-linebreak': 'off',
      '@typescript-eslint/indent': 'off',
      indent: 'off',
      'jsx-a11y/interactive-supports-focus': 'error',
      'react/jsx-curly-newline': 'off',
      'react/jsx-filename-extension': ['error', {extensions: ['.jsx', '.tsx']}],
      'react/jsx-first-prop-new-line': 'off',
      'react/jsx-indent': 'off',
      'react/jsx-indent-props': 'off',
      'react/jsx-one-expression-per-line': 'off',
      'react/jsx-props-no-spreading': 'off',
      'react/jsx-wrap-multilines': 'off',
      '@typescript-eslint/keyword-spacing': 'off',
      'keyword-spacing': 'off',
      'jsx-a11y/label-has-associated-control': [
        'error',
        {
          labelComponents: [],
          labelAttributes: [],
          controlComponents: [],
          assert: 'both',
          depth: 25,
        },
      ],
      'jsx-a11y/label-has-for': [
        'off',
        {
          components: [],
          required: {every: ['nesting', 'id']},
          allowChildren: false,
        },
      ],
      'jsx-a11y/lang': 'error',
      '@typescript-eslint/lines-between-class-members': 'off',
      'lines-between-class-members': 'off',
      'max-len': 'off',
      'jsx-a11y/media-has-caption': [
        'error',
        {audio: [], video: [], track: []},
      ],
      'jsx-a11y/mouse-events-have-key-events': 'error',
      'import/named': 'off',
      'import/namespace': 'off',
      '@typescript-eslint/naming-convention': [
        'error',
        {
          selector: 'variable',
          format: ['camelCase', 'PascalCase', 'UPPER_CASE'],
        },
        {selector: 'function', format: ['camelCase', 'PascalCase']},
        {selector: 'typeLike', format: ['PascalCase']},
      ],
      'import/newline-after-import': 'off',
      'newline-per-chained-call': 'off',
      'import/no-absolute-path': 'error',
      'jsx-a11y/no-access-key': 'error',
      'import/no-amd': 'error',
      '@typescript-eslint/no-array-constructor': 'error',
      'no-array-constructor': 'off', //  use @typescript-eslint version instead
      'jsx-a11y/no-autofocus': ['error', {ignoreNonDOM: true}],
      'import/no-commonjs': 'off',
      'no-confusing-arrow': 'off',
      'no-const-assign': 'off',
      'import/no-cycle': ['error', {maxDepth: 'âˆž'}],
      'import/no-default-export': 'off',
      'jsx-a11y/no-distracting-elements': [
        'error',
        {elements: ['marquee', 'blink']},
      ],
      'no-dupe-args': 'off',
      '@typescript-eslint/no-dupe-class-members': 'error',
      'no-dupe-class-members': 'off', //  use @typescript-eslint version instead
      'no-dupe-keys': 'off',
      'import/no-duplicates': 'error',
      'import/no-dynamic-require': 'error',
      '@typescript-eslint/no-empty-function': [
        'error',
        {allow: ['arrowFunctions', 'functions', 'methods']},
      ],
      'no-empty-function': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-extra-parens': [
        'off',
        'all',
        {
          conditionalAssign: true,
          nestedBinaryExpressions: false,
          returnAssign: false,
          ignoreJSX: 'all',
          enforceForArrowConditionals: false,
        },
      ],
      'no-extra-parens': 'off',
      '@typescript-eslint/no-extra-semi': 'off',
      'no-extra-semi': 'off',
      'import/no-extraneous-dependencies': [
        'error',
        {
          devDependencies: [
            '**/test/**',
            '**/tests/**',
            '**/spec/**',
            '**/__tests__/**',
            '**/__mocks__/**',
            '**/test.{js,jsx,ts,tsx}',
            '**/test-*.{js,jsx,ts,tsx}',
            '**/*{.,_}{test,spec}.{js,jsx,ts,tsx}',
            '**/jest.config.{js,jsx,ts,tsx}',
            '**/jest.setup.{js,jsx,ts,tsx}',
            '**/vue.config.{js,jsx,ts,tsx}',
            '**/webpack.config.{js,jsx,ts,tsx}',
            '**/webpack.config.*.{js,jsx,ts,tsx}',
            '**/rollup.config.{js,jsx,ts,tsx}',
            '**/rollup.config.*.{js,jsx,ts,tsx}',
            '**/gulpfile.{js,jsx,ts,tsx}',
            '**/gulpfile.*.{js,jsx,ts,tsx}',
            '**/Gruntfile{,.{js,jsx,ts,tsx}}',
            '**/protractor.conf.{js,jsx,ts,tsx}',
            '**/protractor.conf.*.{js,jsx,ts,tsx}',
            '**/karma.conf.{js,jsx,ts,tsx}',
            '**/.eslintrc.{js,jsx,ts,tsx}',
            '**/*.config.{js,jsx,ts,tsx}',
          ],
          optionalDependencies: false,
        },
      ],
      'no-func-assign': 'off',
      '@typescript-eslint/no-implied-eval': 'error',
      'no-implied-eval': 'off', //  use @typescript-eslint version instead
      'no-import-assign': 'off',
      'import/no-import-module-exports': ['error', {exceptions: []}],
      'jsx-a11y/no-interactive-element-to-noninteractive-role': [
        'error',
        {tr: ['none', 'presentation']},
      ],
      '@typescript-eslint/no-loop-func': ['error'],
      'no-loop-func': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-loss-of-precision': 'error',
      'no-loss-of-precision': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-magic-numbers': [
        'off',
        {
          ignore: [],
          ignoreArrayIndexes: false,
          enforceConst: true,
          detectObjects: true,
        },
      ],
      'no-magic-numbers': 'off',
      'no-multiple-empty-lines': 'off',
      'import/no-named-as-default-member': 'off',
      'import/no-named-default': 'error',
      'import/no-named-export': 'off',
      'no-nested-ternary': 'off',
      'no-new-func': 'off',
      'no-new-symbol': 'off',
      'jsx-a11y/no-noninteractive-element-interactions': [
        'error',
        {
          handlers: [
            'onClick',
            'onMouseDown',
            'onMouseUp',
            'onKeyPress',
            'onKeyDown',
            'onKeyUp',
          ],
        },
      ],
      'jsx-a11y/no-noninteractive-element-to-interactive-role': [
        'error',
        {
          ul: [
            'listbox',
            'menu',
            'menubar',
            'radiogroup',
            'tablist',
            'tree',
            'treegrid',
          ],
          ol: [
            'listbox',
            'menu',
            'menubar',
            'radiogroup',
            'tablist',
            'tree',
            'treegrid',
          ],
          li: ['menuitem', 'option', 'row', 'tab', 'treeitem'],
          table: ['grid'],
          td: ['gridcell'],
        },
      ],
      'jsx-a11y/no-noninteractive-tabindex': [
        'error',
        {tags: [], roles: ['tabpanel']},
      ],
      'no-obj-calls': 'off',
      'jsx-a11y/no-onchange': 'off',
      '@typescript-eslint/no-redeclare': 'error',
      'no-redeclare': 'off', //  use @typescript-eslint version instead
      'jsx-a11y/no-redundant-roles': 'error',
      'import/no-relative-packages': 'error',
      'import/no-relative-parent-imports': 'off',
      'no-return-await': 'off',
      'import/no-self-import': 'error',
      'no-setter-return': 'off',
      '@typescript-eslint/no-shadow': 'error',
      'no-shadow': 'off', //  use @typescript-eslint version instead
      'jsx-a11y/no-static-element-interactions': [
        'error',
        {
          handlers: [
            'onClick',
            'onMouseDown',
            'onMouseUp',
            'onKeyPress',
            'onKeyDown',
            'onKeyUp',
          ],
        },
      ],
      'no-this-before-super': 'off',
      'no-throw-literal': 'off',
      'no-trailing-spaces': 'off',
      'import/no-unassigned-import': 'off',
      'no-undef': 'off',
      'no-underscore-dangle': 'off',
      'no-unreachable': 'off',
      'import/no-unresolved': 'off',
      'no-unsafe-negation': 'off',
      '@typescript-eslint/no-unused-expressions': [
        'error',
        {
          allowShortCircuit: false,
          allowTernary: false,
          allowTaggedTemplates: false,
        },
      ],
      'no-unused-expressions': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-unused-vars': [
        'error',
        {
          vars: 'all',
          varsIgnorePattern: '^_',
          args: 'after-used',
          argsIgnorePattern: '^_',
          caughtErrors: 'all',
          caughtErrorsIgnorePattern: '^_',
          ignoreRestSiblings: true,
        },
      ],
      'no-unused-vars': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-use-before-define': [
        'error',
        {functions: true, classes: true, variables: true},
      ],
      'no-use-before-define': 'off', //  use @typescript-eslint version instead
      '@typescript-eslint/no-useless-constructor': 'error',
      'no-useless-constructor': 'off', //  use @typescript-eslint version instead
      'import/no-useless-path-segments': ['error', {commonjs: true}],
      'import/no-webpack-loader-syntax': 'error',
      'nonblock-statement-body-position': 'off',
      'object-curly-newline': 'off',
      '@typescript-eslint/object-curly-spacing': 'off',
      'object-curly-spacing': 'off',
      'operator-linebreak': 'off',
      'import/order': [
        'error',
        {groups: [['builtin', 'external', 'internal']]},
      ],
      'import/prefer-default-export': 'off',
      '@typescript-eslint/quotes': 'off',
      quotes: 'off',
      'react-hooks/react-compiler': 'error',
      'react/react-in-jsx-scope': 'off',
      '@typescript-eslint/require-await': 'off',
      'require-await': 'off',
      'react/require-default-props': 'off',
      '@typescript-eslint/return-await': 'off',
      'jsx-a11y/role-has-required-aria-props': 'error',
      'jsx-a11y/role-supports-aria-props': 'error',
      'react-hooks/rules-of-hooks': 'error',
      'jsx-a11y/scope': 'error',
      '@typescript-eslint/semi': 'off',
      semi: 'off',
      'space-before-blocks': 'off',
      '@typescript-eslint/space-before-function-paren': 'off',
      'space-before-function-paren': 'off',
      '@typescript-eslint/space-infix-ops': 'off',
      'space-infix-ops': 'off',
      strict: ['error', 'never'],
      'jsx-a11y/tabindex-no-positive': 'error',
      'import/unambiguous': 'off',
      'valid-typeof': 'off',
    },
  },
];

export default eslintConfig;